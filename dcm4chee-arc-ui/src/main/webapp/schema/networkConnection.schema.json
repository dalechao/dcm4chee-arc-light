{
  "title": "Network Connection",
  "description": "Describes one TCP/UDP port on one network device.",
  "type": "object",
  "required": [
    "dicomHostname"
  ],
  "properties": {
    "cn": {
      "title": "Name",
      "description": "Arbitrary/Meaningful name for the Network Connection object",
      "type": "string"
    },
    "dicomHostname": {
      "title": "Hostname",
      "description": "DNS name for this particular connection",
      "type": "string"
    },
    "dicomPort": {
      "title": "Port",
      "description": "TCP/UDP port that a service is listening on. May be missing if this network connection is only used for outbound connections",
      "type": "integer",
      "minimum": 0,
      "maximum":99999,
      "exclusiveMinimum": true
    },
    "dicomTLSCipherSuite": {
      "title": "TLS CipherSuites",
      "description": "The TLS CipherSuites that are supported on this particular connection. If not present TLS is disabled",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "SSL_RSA_WITH_NULL_SHA",
          "TLS_RSA_WITH_AES_128_CBC_SHA",
          "SSL_RSA_WITH_3DES_EDE_CBC_SHA"
        ]
      }
    },
    "dicomInstalled": {
      "title": "installed",
      "description": "True if the Network Connection is installed on the network. If not present, information about the installed status of the Network Connection is inherited from the device",
      "type": "boolean"
    },
    "dcmNetworkConnection": {
      "title": "dcm4che Network Connection Attributes",
      "description": "dcm4che proprietary Network Connection Attributes",
      "type": "object",
      "properties": {
        "dcmProtocol": {
          "title": "Protocol",
          "description": "Protocol of Network Connection: DICOM, HL7, SYSLOG_TLS or SYSLOG_UDP; DICOM if absent",
          "type": "string",
          "enum": [
              "DICOM",
              "HL7",
              "SYSLOG_TLS",
              "SYSLOG_UDP"
          ]
        },
        "dcmHTTPProxy": {
          "title": "HTTP Proxy",
          "description": "HTTP Proxy: [user:password@]host:port",
          "type": "string"
        },
        "dcmTLSNeedClientAuth": {
          "title": "TLS Need Client Auth",
          "description": "Indicates if TLS client authentication is required; required if absent",
          "type": "boolean"
        },
        "dcmTLSProtocol": {
          "title": "TLS Protocol",
          "description": "The Supported TLS Protocols; TLSv1, SSLv3 if absent",
          "type": "string",
          "enum": [
            "TLSv1",
            "SSLv3"
          ]
        },
        "dcmTCPBacklog": {
          "title": "TCP Backlog",
          "description": "Maximum queue length for incoming TCP connections; 50 if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmTCPConnectTimeout": {
          "title": "TCP Connect Timeout",
          "description": "TCP connect timeout in ms; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmTCPCloseDelay": {
          "title": "TCP Close Delay",
          "description": "TCP socket close delay in ms after send of A-ASSOCIATE-RJ, A-RELEASE-RP or A-ABORT PDU; 50 ms if absent",
          "type": "integer",
          "minimum": 0
        },
        "dcmTCPSendBufferSize": {
          "title": "TCP Send Buffer Size",
          "description": "TCP send buffer size; use system defaults if absent",
          "type": "integer",
          "minimum": 1024
        },
        "dcmTCPReceiveBufferSize": {
          "title": "TCP Receive Buffer Size",
          "description": "TCP receive buffer size; use system defaults if absent",
          "type": "string",
          "minimum": 1024
        },
        "dcmTCPNoDelay": {
          "title": "TCP No Delay",
          "description": "Enable/disable TCP_NODELAY (disable/enable Nagle algorithm); disable Nagle algorithm if absent",
          "type": "boolean"
        },
        "dcmBindAddress": {
          "title": "Bind Address",
          "description": "Bind address of listening socket; use hostname of the connection if absent",
          "type": "string"
        },
        "dcmClientBindAddress": {
          "title": "Client Bind Address",
          "description": "Bind address of outgoing connections; use hostname of the connection if absent",
          "type": "string"
        },
        "dcmBlacklistedHostname": {
          "title": "Blacklisted Hostname",
          "description": "blacklisted DNS hostnames",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dcmSendPDULength": {
          "title": "Send PDU Length",
          "description": "Maximal length of emitted PDUs; 16378 if absent",
          "type": "integer",
          "minimum": 1024
        },
        "dcmReceivePDULength": {
          "title": "Receive PDU Length",
          "description": "Maximal length of received PDUs; 16378 if absent",
          "type": "integer",
          "minimum": 1024
        },
        "dcmMaxOpsPerformed": {
          "title": "Max Ops Performed",
          "description": "Maximal number of operations to perform asynchronously; 0 = infinite; 1 (=synchronous) if absent",
          "type": "integer",
          "minimum": 0
        },
        "dcmMaxOpsInvoked": {
          "title": "Max Ops Invoked",
          "description": "Maximal number of operations to invoke asynchronously; 0 = infinite; 1 (=synchronous) if absent",
          "type": "integer",
          "minimum": 0
        },
        "dcmPackPDV": {
          "title": "Pack PDV",
          "description": "Enable/disable packing of command and data PDVs into one P-DATA-TF PDU; enabled if absent",
          "type": "boolean"
        },
        "dcmAARQTimeout": {
          "title": "AA-RQ Timeout",
          "description": "Timeout in ms for receive of A-ASSOCIATE-RQ PDU after TCP connect; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmAAACTimeout": {
          "title": "AA-AC Timeout",
          "description": "Timeout in ms for receive of A-ASSOCIATE-AC PDU after send of A-ASSOCIATE-RQ PDU; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmARRPTimeout": {
          "title": "AR-RP Timeout",
          "description": "Timeout in ms for receive of A-RELEASE-RP PDU after send of A-RELEASE-RQ PDU; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmResponseTimeout": {
          "title": "Response Timeout",
          "description": "Timeout in ms for receive of response message; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmRetrieveTimeout": {
          "title": "Retrieve Timeout",
          "description": "Timeout in ms for receive of C-GET-RSP or C-MOVE-RSP; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "dcmIdleTimeout": {
          "title": "Idle Timeout",
          "description": "Indicates aborting of idle Associations after specified timeout in ms; no timeout if absent",
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": true
        }
      }
    }
  }
}
